/**

* \file      main.c

* \author    Tiyangou Quentin

* \version   <0.1>

* \date      <20-01-2021>

* \brief     <bataille navale vers 1.0>

*

* \details    <modification de la bataille navale>

*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <windows.h>


#pragma execution_character_set("utf-8")

void emptyBuffer() {
    int c = 0;
    while (c != '\n' && c != EOF) {
        c = getchar();
    }
}


//variables
int selectionplayer, erreur, playername;//setting variables

int choixlettre = '0', end = 0;//variables


//fonctions
int letter() {
    char choixlettre = '0';
    int nb1;
    printf("\ninsérer des coordonnées:");
    fflush(stdin);
    scanf("%c", &choixlettre);//recieve the coordinates
    nb1 = choixlettre - 'a';
    return nb1;
}

void endgame(int grille[10][10]) {
    int compteur = 0;
//victory condition
    for (int i = 0; i <= 9; ++i) {
        for (int j = 0; j <= 9; ++j) {
            if (grille[i][j] > 0 && grille[i][j] < 10) {
                compteur++;

            }
        }
        for (int i = 0; i <= 9; ++i) { //assignation de valeur à la grille
            for (int j = 0; j <= 9; ++j) {if (grille[i][j]== 0 || 105)
                printf("gg u won");



            }
        }
    }
    if (compteur <= 20) { printf("Bien Joué tu as Gagné %s", playername); }
    else { printf("Meh Loser"); }


}

//grid display
void affichage(int grille[10][10]) {


    system("cls");
    printf("      A  B  C  D  E  F  G  H  I  J  ");

    for (int i = 0; i <= 9; i++) {//numbers axis y

        printf("\n%5.d", i + 1);


        for (int l = 0; l <= 9; ++l) {//displays the grid
            if (grille[i][l] < 10) {
                printf(" 0 ");
            }

        }

    }

}


//jeu
void play(int grille[10][10]) {
    int compteur = 0;

    do {
        int Choixchiffre = 0;
        int Choixlettre = 0;
        printf("\n");
        printf("\n");

        Choixlettre = letter();

        printf("\nEntrez un chiffre: ");
        scanf("%d", &Choixchiffre); //gets the player's coordinate
        Choixchiffre = Choixchiffre - 1;

        if (grille[Choixlettre][Choixchiffre] > 1 &&
            grille[Choixlettre][Choixchiffre] < 100) { //add value to the selected coordinate
            grille[Choixlettre][Choixchiffre] = 0;
        }
        if (grille[Choixlettre][Choixchiffre] == 1) {
            grille[Choixlettre][Choixchiffre] = 100;
        }

        for (int i = 0; i <= 9; ++i) { //assignation de valeur à la grille
            for (int j = 0; j <= 9; ++j) {
                switch (grille[Choixlettre][Choixchiffre]) {
                    case 105: printf("touché");
                        break;
                    case 0:
                        printf("plouf");

                }



            }
        }

        compteur++;

    } while (compteur >= 20);


    endgame(grille);
    printf("\nfin de la partie");
}


void initialisation() {
    int grille[10][10];
    for (int i = 0; i <= 9; ++i) { //assignation de valeur à la grille
        for (int j = 0; j <= 9; ++j) {
            grille[i][j] = 0;

        }
    }
    char curseur, container;
    int grillerand, time = 1, nbr2 = 0, nbr1 = 0;
    FILE *grillefile;
    srand((unsigned) (time=NULL));
    grillerand = 1 + rand() % 4;
    switch (grillerand) {
        case 1:

            //  grillefile =fopen( chemin du file,"r") ;


            break;
        case 2:

            break;
    }//grille
    if (grillefile != NULL) {
        do {
            fscanf(grillefile, "%c", &curseur);
            if (curseur != '-') {
                container = curseur - '0';
                nbr2 - container;
                if (time % 2 != 1) {
                    grille[nbr1][nbr2] = 5;
                }
                time++;
                nbr1 = container;
            }
        } while (!feof(grillefile));
        fclose(grillefile);
    }
    fclose(grillefile);
    affichage(grillefile);
    play(grillefile);
}

void main() {

    SetConsoleOutputCP(65001);//displays special characters
    setbuf(stdout, 0);

    printf("Bienvenu dans la bataille Navale!\n\n");
    do {

        printf("selectionner:\n\n");

        printf("1. Jouer\n");

        printf("2. Instruction\n");

        printf("3. Scores\n");

        printf("4. S'enrengistrer\n");

        printf("5. quitter\n");
        scanf("%d", &selectionplayer); //take player selection
        system("cls");//clears console

        switch (selectionplayer) {//menu

            case 1: {//jouer
                initialisation();
                emptyBuffer();
                printf("\ncontinuer de jouer?"
                       "\noui=0/non=1");

                scanf("%d", &end);
                break;

                case 2://instructions
                    printf("\nentrer une coordonnée comme suit: <lettre minuscule> enter <numéro> pour tirer."
                           "\nle joueur gagne quand les 4 bateaux sont coulés");
                printf("\nretourner au menu =0\n"
                       "commencer une partie=1\n"
                       "quitter =5\n");
                emptyBuffer();
                scanf("&d", &end);

                break;

                case 3:
                    printf("\nVoici le Tableau des score!\n\n");

                FILE *fp;
                char str[MAXCHAR];
                char *filename = "c:\\users\\Quentin.TIYANGOU\\BNavale\\scores\\test.txt";

                fp = fopen(filename, "r");
                if (fp == NULL) {
                    printf("Could not open file %s", filename);
                }
                while (fgets(str, MAXCHAR, fp) != NULL)
                    printf("%s", str);
                fclose(fp);;//affiche le tableau des scores
                printf("\n\n");
                break;

                case 4:
                    printf("entrer un nom:\n");
                scanf("%s", &playername);
                break;

                case 5:
                    printf("fermer (in progress)");//ferme le programme
                printf("Voulez-vous quitter?\n"
                       "oui =5 / non =0");
                emptyBuffer();
                scanf("&d", &end);
                break;

                default:

                    printf("Erreur! veuillez reessayer!\n");

                break;

            }

        }

    } while (end = 5);


}
